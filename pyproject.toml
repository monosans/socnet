[tool.poetry]
name = ""
version = "0"
description = ""
authors = []

[tool.poetry.dependencies]
python = "^3.8"
Django = { version = "4.2.1", extras = ["argon2"] }
django-allauth-2fa = "0.10.0"
django-allauth = "0.54.0"
django-cleanup = "7.0.0"
django-environ = "0.10.0"
django-filter = "23.2"
django-logentry-admin = "1.1.0"
django-otp = "1.1.6"
django-stubs-ext = "4.2.0"
docutils = "0.19"
Pillow = "9.5.0"

django-crispy-forms = "2.0"
crispy-bootstrap5 = "0.7"

djangorestframework = "3.14.0"
drf-spectacular = "0.26.2"

channels = "4.0.0"
channels-redis = "4.1.0"

lxml = "4.9.2"
pyromark = "0.1.0"
nh3 = "0.2.11"

sentry-sdk = { version = "1.22.2", extras = ["django"] }

typing-extensions = { version = "4.5.0", python = "<3.10" }

uvicorn = "0.22.0"
httptools = "0.5.0"
uvloop = { version = "0.17.0", markers = "implementation_name == 'cpython' and (sys_platform == 'darwin' or sys_platform == 'linux')" }
websockets = "11.0.3"

[tool.poetry.group.local.dependencies]
psycopg = { version = "3.1.9", extras = ["binary"] }

debugpy = "1.6.7"

# Required for uvicorn's --reload
watchfiles = "0.19.0"

django-debug-toolbar = "4.0.0"
django-extra-checks = "0.13.3"

pre-commit = "3.3.1"
black = "23.3.0"
djlint = "1.27.0"

ruff = "0.0.265"

mypy = "1.2.0"
django-stubs = "4.2.0"
djangorestframework-stubs = "3.14.0"
types-lxml = "2023.3.28"

pytest = "7.3.1"
pytest-django = "4.5.2"
coverage = { version = "7.2.5", extras = ["toml"] }
covdefaults = "2.3.0"
django-coverage-plugin = "3.0.0"
factory-boy = "3.2.1"

[tool.poetry.group.production.dependencies]
gunicorn = "20.1.0"
psycopg = { version = "3.1.9", extras = ["c"] }
redis = { version = "4.5.5", extras = ["hiredis"] }

[tool.black]
target-version = ["py38"]
skip-magic-trailing-comma = true
preview = true

[tool.coverage.report]
exclude_lines = [
    "^\\s*@(?:abc\\.)?abstractmethod$",
    "^\\s*if\\s+(?:settings\\.)?DEBUG\\s*:$",
]
fail_under = 75

[tool.coverage.run]
omit = [
    ".venv/*",
    "node_modules/*",
    "config/asgi.py",
    "config/settings/local.py",
    "config/settings/production.py",
    "config/wsgi.py",
    "manage.py",
]
plugins = ["covdefaults", "django_coverage_plugin"]

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.djlint]
blank_line_after_tag = "load,extends"
ignore = "H006,H030,H031"
include = "H017,H035"
indent = 2
max_line_length = 80
profile = "django"

[tool.mypy]
python_version = "3.8"
disallow_subclassing_any = false
disallow_untyped_calls = false
disallow_untyped_decorators = false
warn_unreachable = true
local_partial_types = true
enable_error_code = [
    "redundant-self",
    "redundant-expr",
    "truthy-bool",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
]
strict = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[[tool.mypy.overrides]]
module = "socnet.*.migrations.*"
ignore_errors = true

[[tool.mypy.overrides]]
module = "allauth_2fa.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "allauth.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "channels.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "channels_redis.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "debug_toolbar.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "django_filters.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "django_otp.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "environ.*"
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "factory.*"
ignore_missing_imports = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
FAIL_INVALID_TEMPLATE_VARS = true
addopts = ["--strict-config", "--strict-markers"]
xfail_strict = true

[tool.ruff]
target-version = "py38"
select = ["ALL"]
ignore = [
    "ANN",
    "BLE001",
    "C901",
    "COM",
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
    "D203",
    "D205",
    "D212",
    "D213",
    "D400",
    "D401",
    "D407",
    "D415",
    "D417",
    "DJ008",
    "ERA001",
    "PD901",
    "PLR0911",
    "PLR0912",
    "PLR0913",
    "PLR0915",
    "PT012",
    "RUF001",
    "RUF002",
    "RUF003",
    "S110",
    "S112",
    "S308",
    "S311",
    "SIM105",
    "TCH001",
    "TCH002",
    "TCH003",
    "TID252",
    "TRY400",
]

[tool.ruff.per-file-ignores]
"config/settings/*" = ["F403", "F405"]
"docker/django/gunicorn_config.py" = ["INP001"]
"tests/*" = ["PLR2004", "S101"]

[tool.ruff.flake8-gettext]
extend-function-names = ["gettext_lazy"]

[tool.ruff.flake8-unused-arguments]
ignore-variadic-names = true

[tool.ruff.isort]
combine-as-imports = true
required-imports = ["from __future__ import annotations"]

[tool.ruff.pyupgrade]
keep-runtime-typing = true

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
