[tool.black]
line-length = 79
target-version = ["py38"]
skip-magic-trailing-comma = true
preview = true

[tool.coverage.report]
exclude_lines = ["@(abc.)?abstractmethod", "if\\s+(settings.)?DEBUG\\s*:"]
fail_under = 70

[tool.coverage.run]
omit = [
    "*.txt",
    "config/asgi.py",
    "config/settings/local.py",
    "config/settings/production.py",
    "config/wsgi.py",
    "manage.py",
]
plugins = ["covdefaults", "django_coverage_plugin"]

[tool.django-stubs]
django_settings_module = "config.settings.test"

[tool.djlint]
ignore = "H006,H030,H031"
indent = 2
blank_line_after_tag = "load,extends"
profile = "django"
max_line_length = 80
format_attribute_template_tags = true

[tool.isort]
py_version = 38
profile = "black"
line_length = 79
add_imports = ["from __future__ import annotations"]
combine_as_imports = true
combine_star = true

[tool.mypy]
ignore_missing_imports = true
python_version = "3.8"
disallow_subclassing_any = false
disallow_untyped_decorators = false
warn_unreachable = true
local_partial_types = true
enable_error_code = [
    "redundant-self",
    "redundant-expr",
    "truthy-bool",
    "truthy-iterable",
    "ignore-without-code",
    "unused-awaitable",
]
strict = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]

[[tool.mypy.overrides]]
module = "socnet.*.migrations.*"
ignore_errors = true

[tool.pylint.main]
ignore-paths = ["socnet/.*/migrations/.*"]

# https://pylint.pycqa.org/en/stable/user_guide/checkers/extensions.html
load-plugins = [
    "pylint_django",
    "pylint.extensions.check_elif",
    "pylint.extensions.code_style",
    "pylint.extensions.comparison_placement",
    "pylint.extensions.confusing_elif",
    "pylint.extensions.consider_refactoring_into_while_condition",
    "pylint.extensions.consider_ternary_expression",
    "pylint.extensions.dict_init_mutate",
    "pylint.extensions.dunder",
    "pylint.extensions.empty_comment",
    "pylint.extensions.eq_without_hash",
    "pylint.extensions.for_any_all",
    "pylint.extensions.overlapping_exceptions",
    "pylint.extensions.private_import",
    "pylint.extensions.redefined_loop_name",
    "pylint.extensions.redefined_variable_type",
    "pylint.extensions.set_membership",
    "pylint.extensions.typing",
]

persistent = false
py-version = "3.8"
recursive = true

[tool.pylint.basic]
good-names = ["db", "pk"]

[tool.pylint."django foreign keys referenced by strings"]
django-settings-module = "config.settings.test"

[tool.pylint.format]
max-line-length = 79

[tool.pylint."messages control"]
disable = [
    "consider-using-assignment-expr",
    "consider-using-f-string",
    "duplicate-code",
    "missing-class-docstring",
    "missing-function-docstring",
    "missing-module-docstring",
    "too-few-public-methods",
    "unsubscriptable-object",
]

[tool.pylint.reports]
score = false

[tool.pylint.string]
check-str-concat-over-line-jumps = true

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "config.settings.test"
FAIL_INVALID_TEMPLATE_VARS = true
addopts = "--strict-markers --strict-config"
xfail_strict = true
