name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  check:
    if: ${{ always() && github.event_name == 'pull_request' }}
    needs:
      - clippy
      - eslint
      - mypy
      - pre-commit
      - pytest
      - rustfmt
      - tsc
      - udeps
    runs-on: ubuntu-24.04
    steps:
      - uses: re-actors/alls-green@release/v1
        with:
          jobs: ${{ toJSON(needs) }}
  clippy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: beta
          components: clippy
      - run: cargo +beta clippy -- -Dwarnings
        working-directory: ./socnet_rs
  eslint:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: npm
          check-latest: true
      - run: npm ci
      - run: npx eslint --max-warnings 0 .
  mypy:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - run: cp .env.example .env
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - run: uv run --extra local --locked --python 3.13 mypy .
  pre-commit:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v6
        with:
          enable-cache: false
      - run: uv tool run --no-cache --python 3.13 prek run --all-files --show-diff-on-failure
        env:
          RUFF_OUTPUT_FORMAT: github
  pytest:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: docker/setup-buildx-action@v3
      - id: build
        uses: docker/build-push-action@v6
        with:
          build-args: EXTRA=local
          cache-from: type=gha
          cache-to: type=gha,mode=max
          file: ./docker/django/Dockerfile
          load: true
          tags: socnet-ci-django
          target: python-ci
      - run: cp .env.example .env
      - run: docker compose -f compose.yaml -f compose.ci.yaml run --rm django python3 manage.py migrate
      - run: docker compose -f compose.yaml -f compose.ci.yaml run --rm django pytest --cov
      - if: ${{ always() && steps.build.conclusion == 'success' }}
        run: docker compose -f compose.yaml -f compose.ci.yaml down --remove-orphans
  rustfmt:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          components: rustfmt
      - run: cargo +nightly fmt --check
        working-directory: ./socnet_rs
  tsc:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions/setup-node@v5
        with:
          node-version-file: .nvmrc
          cache: npm
          check-latest: true
      - run: npm ci
      - run: npx tsc --build --noEmit
  udeps:
    runs-on: ubuntu-24.04
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: nightly
          cache-key: x86_64-unknown-linux-gnu
      - run: cargo +nightly install --locked cargo-udeps
      - run: cargo +nightly udeps
        working-directory: ./socnet_rs
