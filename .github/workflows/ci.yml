name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  run-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: cargo +stable clippy --all-targets --all-features -- -Dwarnings -Wclippy::pedantic
        working-directory: ./socnet_rs
  run-eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          check-latest: true
      - run: npm ci
      - run: npx eslint --max-warnings 0 .
  run-pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: astral-sh/setup-uv@v3
      - run: uv tool run --from pre-commit@latest --with pre-commit-uv --no-cache --python 3.12 pre-commit run --all-files
  run-pytest-mypy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: cp .env.example .env
      - run: docker compose -f docker-compose.yml -f docker-compose.ci.yml pull --ignore-buildable
      - id: build
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml build --pull django
      - run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm django python3 manage.py migrate
      - run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm django pytest --cov
      - if: ${{ !cancelled() && steps.build.conclusion == 'success' }}
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm django mypy .
      - if: ${{ always() && steps.build.conclusion == 'success' }}
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml down --remove-orphans
  run-rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - run: rustup toolchain install nightly --profile minimal --component rustfmt --no-self-update --allow-downgrade
      - run: cargo +nightly fmt --check
        working-directory: ./socnet_rs
  run-tsc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          persist-credentials: false
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          check-latest: true
      - run: npm ci
      - run: npx tsc --noEmit
