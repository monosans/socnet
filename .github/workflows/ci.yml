name: CI
on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true
jobs:
  run-clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: cd socnet_rs && cargo +stable clippy --all-targets --all-features -- -Dwarnings -Wclippy::pedantic
  run-eslint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          check-latest: true
      - run: npm ci
      - run: npx eslint --max-warnings 0 .
  run-pre-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - id: run-pre-commit
        run: pipx run pre-commit run --all-files
      - id: generate-token
        if: ${{ failure() && steps.run-pre-commit.conclusion == 'failure' }}
        uses: tibdex/github-app-token@v2
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.PRIVATE_KEY }}
      - if: ${{ failure() && steps.generate-token.conclusion == 'success' }}
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ steps.generate-token.outputs.token }}
          commit-message: Run pre-commit
          committer: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          author: github-actions[bot] <41898282+github-actions[bot]@users.noreply.github.com>
          branch: pre-commit/${{ github.ref_name }}
          delete-branch: true
          title: Run pre-commmit
          body:
  run-pytest-mypy:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: "1"
    steps:
      - uses: actions/checkout@v4
      - run: cp .env.example .env
      - run: docker compose -f docker-compose.yml -f docker-compose.ci.yml pull --ignore-buildable
      - id: build
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml build --pull
      - run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm django python3 manage.py migrate
      - run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm django pytest --cov
      - if: ${{ steps.build.conclusion == 'success' }}
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml run --rm django mypy .
      - if: ${{ steps.build.conclusion == 'success' }}
        run: docker compose -f docker-compose.yml -f docker-compose.ci.yml down --remove-orphans
  run-rustfmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - run: rustup toolchain install nightly --profile minimal --component rustfmt --no-self-update --allow-downgrade
      - run: cd socnet_rs && cargo +nightly fmt --check
  run-tsc:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: .nvmrc
          cache: npm
          check-latest: true
      - run: npm ci
      - run: npx tsc --noEmit
